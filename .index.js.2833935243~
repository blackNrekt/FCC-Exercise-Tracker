const express = require('express')
const app = express()
const cors = require('cors')
require('dotenv').config()

let bodyParser = require('body-parser')
let mongoose = require('mongoose')

mongoose.connect(process.env['MONGO_URI']);

//Create user schema
const userSchema = new mongoose.Schema({
  username: { type: String, required: true }
});

const exerciseSchema = new mongoose.Schema({
  userId: { type: String, required: true },
  description: { type: String, required: true },
  duration: { type: Number, required: true },
  date: { type: Date, default: new Date() },
});  

let userModel = new mongoose.model('user', userSchema);
let excerciseModel = new mongoose.model('exercise', exerciseSchema); 


app.use(cors())
app.use(express.static('public'))
app.get('/', (req, res) => {
  res.sendFile(__dirname + '/views/index.html')
});
app.use('/', bodyParser.urlencoded({ extended: false }));

app.post('/api/users', async (req, res) => {
  let username = req.body.username;
  let newUser = new userModel({ username: username });
  let data = await newUser.save();
  res.json(data);  
});

app.get('/api/users', async (req, res) => {
  try {
    let users = userModel.find({});
    res.json(users);  
})

app.post('/api/users/:_id/exercises', async (req, res) => {
  
  let exerciseObj = {
    userId : req.params._id,
    description: req.body.description,
    duration: req.body.duration,
  };

  if (req.body.date != '') {
    exerciseObj.date = req.body.date;
  }

  let newExercise = new exerciseModel(exerciseObj);
  newExercise.save()
});


const listener = app.listen(process.env.PORT || 3000, () => {
  console.log('Your app is listening on port ' + listener.address().port)
})
